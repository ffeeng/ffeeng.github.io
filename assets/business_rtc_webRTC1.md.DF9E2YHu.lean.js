import{_ as s,c as a,b as n,o as l}from"./chunks/framework.CUf7xJpa.js";const p=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":3,"title":"web直播","slug":"web直播","link":"#web直播","children":[]},{"level":3,"title":"demo","slug":"demo","link":"#demo","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"relativePath":"business/rtc/webRTC1.md","filePath":"business/rtc/webRTC1.md"}');const o=s({name:"business/rtc/webRTC1.md"},[["render",function(s,p,o,e,t,c){return l(),a("div",null,p[0]||(p[0]=[n('<p>[TOC] <img src="/assets/img_29.DsBzWLI7.png" alt="img.png"></p><h3 id="web直播" tabindex="-1"><a href="https://doc-zh.zego.im/zh/7638.html" target="_blank" rel="noreferrer">web直播</a> <a class="header-anchor" href="#web直播" aria-label="Permalink to &quot;[web直播](https://doc-zh.zego.im/zh/7638.html)&quot;">​</a></h3><ul><li>WebRTC 采集传输 STUN(Session Traversal Utilities for NAT, TURN ChannelData Message)</li><li>video 播放</li><li>流媒体服务器 处理</li><li>webSocket（ZegoExpressWebRTC-sdk） 发房间消息 在线人数</li></ul><h4 id="实现原理" tabindex="-1">实现原理 <a class="header-anchor" href="#实现原理" aria-label="Permalink to &quot;实现原理&quot;">​</a></h4><ul><li>采集</li><li>预览</li><li>传输 推流</li><li>显示 拉流</li><li>最小原型</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> constraints </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> { audio: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, video: { width: </span><span style="color:#79B8FF;">1280</span><span style="color:#E1E4E8;">, height: </span><span style="color:#79B8FF;">720</span><span style="color:#E1E4E8;"> } };</span></span>\n<span class="line"><span style="color:#6A737D;">// 视频采集</span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> mediaStream</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> await</span><span style="color:#E1E4E8;"> navigator.mediaDevices.</span><span style="color:#B392F0;">getUserMedia</span><span style="color:#E1E4E8;">(constraints)                                                                          </span></span>\n<span class="line"><span style="color:#6A737D;">// 预览</span></span>\n<span class="line"><span style="color:#E1E4E8;">video.srcObject </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> mediaStream;</span></span>\n<span class="line"><span style="color:#E1E4E8;">video.</span><span style="color:#B392F0;">onloadedmetadata</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    video.</span><span style="color:#B392F0;">play</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">};</span></span>\n<span class="line"><span style="color:#6A737D;">// 传输 WebRTC todo </span></span>\n<span class="line"><span style="color:#6A737D;">// 显示</span></span>\n<span class="line"><span style="color:#E1E4E8;">video.srcObject </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> remoteStream;</span></span></code></pre></div><h4 id="实现步骤" tabindex="-1">实现步骤 <a class="header-anchor" href="#实现步骤" aria-label="Permalink to &quot;实现步骤&quot;">​</a></h4><ol><li>登录房间</li><li>推流</li><li>流更新获取拉流地址</li></ol><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> zg.</span><span style="color:#B392F0;">loginRoom</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.data.roomID, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.data.token, {userID: </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.data.userID, userName: </span><span style="color:#9ECBFF;">&#39;nick&#39;</span><span style="color:#F97583;"> +</span><span style="color:#79B8FF;"> this</span><span style="color:#E1E4E8;">.data.userID});</span></span>\n<span class="line"><span style="color:#6A737D;">// 获取推流地址</span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> {</span><span style="color:#79B8FF;">url</span><span style="color:#E1E4E8;">} </span><span style="color:#F97583;">=</span><span style="color:#F97583;"> await</span><span style="color:#E1E4E8;"> zg.</span><span style="color:#B392F0;">startPublishingStream</span><span style="color:#E1E4E8;">(context.data.pushStreamID);</span></span>\n<span class="line"><span style="color:#6A737D;">// 推流到服务启后触发流更新 从streamList中拿到拉流src</span></span>\n<span class="line"><span style="color:#E1E4E8;">zg.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;roomStreamUpdate&quot;</span><span style="color:#E1E4E8;">, (</span><span style="color:#FFAB70;">roomID</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">updateType</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">streamList</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#6A737D;">  // ... 解析出 remoteStream</span></span>\n<span class="line"><span style="color:#E1E4E8;">  video.srcObject </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> remoteStream</span></span>\n<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre></div><h3 id="demo" tabindex="-1">demo <a class="header-anchor" href="#demo" aria-label="Permalink to &quot;demo&quot;">​</a></h3><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">&lt;!</span><span style="color:#85E89D;">doctype</span><span style="color:#B392F0;"> html</span><span style="color:#E1E4E8;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">html</span><span style="color:#B392F0;"> lang</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;en&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">head</span><span style="color:#E1E4E8;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">meta</span><span style="color:#B392F0;"> charset</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;UTF-8&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">meta</span><span style="color:#B392F0;"> name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;viewport&quot;</span></span>\n<span class="line"><span style="color:#B392F0;">        content</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">meta</span><span style="color:#B392F0;"> http-equiv</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;X-UA-Compatible&quot;</span><span style="color:#B392F0;"> content</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;ie=edge&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">title</span><span style="color:#E1E4E8;">&gt;WebRTC直播&lt;/</span><span style="color:#85E89D;">title</span><span style="color:#E1E4E8;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">script</span><span style="color:#B392F0;"> src</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;./ZegoExpressWebRTC-2.1.0.js&quot;</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">head</span><span style="color:#E1E4E8;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">body</span><span style="color:#E1E4E8;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">video</span><span style="color:#B392F0;"> id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;local-video&quot;</span><span style="color:#B392F0;"> autoplay</span><span style="color:#B392F0;"> width</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;500px&quot;</span><span style="color:#B392F0;"> height</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;500px&quot;</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">video</span><span style="color:#E1E4E8;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">video</span><span style="color:#B392F0;"> id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;remote-video&quot;</span><span style="color:#B392F0;"> autoplay</span><span style="color:#B392F0;"> width</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;500px&quot;</span><span style="color:#B392F0;"> height</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;500px&quot;</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">video</span><span style="color:#E1E4E8;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  (</span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#F97583;">    try</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#F97583;">      let</span><span style="color:#E1E4E8;"> appID </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;"> 173</span><span style="color:#F97583;">****</span><span style="color:#79B8FF;">9272</span><span style="color:#F97583;">****</span><span style="color:#79B8FF;">706</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 请从官网控制台获取对应的appID</span></span>\n<span class="line"><span style="color:#F97583;">      let</span><span style="color:#E1E4E8;"> server </span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;"> &#39;wss://webliveroom-test.zego.im/ws&#39;</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 请从官网控制台获取对应的server地址，否则可能登录失败</span></span>\n<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> userId</span><span style="color:#F97583;"> =</span><span style="color:#9ECBFF;"> &#39;1&#39;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> zg</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> new</span><span style="color:#B392F0;"> ZegoExpressEngine</span><span style="color:#E1E4E8;">(appID, server);</span></span>\n<span class="line"><span style="color:#6A737D;">      // console.log(zg)</span></span>\n<span class="line"><span style="color:#F97583;">      let</span><span style="color:#E1E4E8;"> url </span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;"> &#39;https://wsliveroom-alpha.zego.im:8282/token&#39;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> query</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> new</span><span style="color:#B392F0;"> URLSearchParams</span><span style="color:#E1E4E8;">({</span></span>\n<span class="line"><span style="color:#E1E4E8;">        app_id: appID,</span></span>\n<span class="line"><span style="color:#E1E4E8;">        id_name: userId</span></span>\n<span class="line"><span style="color:#E1E4E8;">      });</span></span>\n<span class="line"><span style="color:#E1E4E8;">      url </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> url </span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;"> &#39;?&#39;</span><span style="color:#F97583;"> +</span><span style="color:#E1E4E8;"> query.</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#6A737D;">      // url = &#39;https://wsliveroom-alpha.zego.im:8282/token?app_id=1739272706&amp;id_name=sample1613981824652&#39;</span></span>\n<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> res</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> await</span><span style="color:#B392F0;"> fetch</span><span style="color:#E1E4E8;">(url);</span></span>\n<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> token</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> await</span><span style="color:#E1E4E8;"> res.</span><span style="color:#B392F0;">text</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> result</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> await</span><span style="color:#E1E4E8;"> zg.</span><span style="color:#B392F0;">loginRoom</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;2&#39;</span><span style="color:#E1E4E8;">, token, {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        userID: userId,</span></span>\n<span class="line"><span style="color:#E1E4E8;">        userName: </span><span style="color:#9ECBFF;">&#39;feng&#39;</span></span>\n<span class="line"><span style="color:#E1E4E8;">      });</span></span>\n<span class="line"><span style="color:#E1E4E8;">      console.</span><span style="color:#B392F0;">warn</span><span style="color:#E1E4E8;">({result})</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F97583;">      let</span><span style="color:#E1E4E8;"> constraints </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        camera: {</span></span>\n<span class="line"><span style="color:#E1E4E8;">          AEC: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">          AGC: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">          ANS: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">          audio: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">        }</span></span>\n<span class="line"><span style="color:#E1E4E8;">      }</span></span>\n<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> localStream</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> await</span><span style="color:#E1E4E8;"> zg.</span><span style="color:#B392F0;">createStream</span><span style="color:#E1E4E8;">(constraints);</span></span>\n<span class="line"><span style="color:#F97583;">      let</span><span style="color:#E1E4E8;"> localVideo </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">getElementById</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;local-video&#39;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#F97583;">      let</span><span style="color:#E1E4E8;"> remoteVideo </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">getElementById</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;remote-video&#39;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">      localVideo.srcObject </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> localStream;</span></span>\n<span class="line"><span style="color:#6A737D;">      // localStream 为创建流获取的 MediaStream 对象</span></span>\n<span class="line"><span style="color:#F97583;">      let</span><span style="color:#E1E4E8;"> t </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> zg.</span><span style="color:#B392F0;">startPublishingStream</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;stream002&#39;</span><span style="color:#E1E4E8;">, localStream)</span></span>\n<span class="line"><span style="color:#E1E4E8;">      console.</span><span style="color:#B392F0;">warn</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;publish stream&#39;</span><span style="color:#E1E4E8;"> , t);</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">      zg.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;publisherStateUpdate&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">async</span><span style="color:#FFAB70;"> result</span><span style="color:#F97583;"> =&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        console.</span><span style="color:#B392F0;">warn</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;publisherStateUpdate&#39;</span><span style="color:#E1E4E8;">,result);</span></span>\n<span class="line"><span style="color:#F97583;">        const</span><span style="color:#79B8FF;"> remoteStream</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> await</span><span style="color:#E1E4E8;"> zg.</span><span style="color:#B392F0;">startPlayingStream</span><span style="color:#E1E4E8;">(result.streamID);</span></span>\n<span class="line"><span style="color:#6A737D;">        // remoteVideo为本地&lt;video&gt;或&lt;audio&gt;对象</span></span>\n<span class="line"><span style="color:#E1E4E8;">        remoteVideo.srcObject </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> remoteStream;</span></span>\n<span class="line"><span style="color:#6A737D;">        // 推流状态更新回调</span></span>\n<span class="line"><span style="color:#6A737D;">        // ...</span></span>\n<span class="line"><span style="color:#E1E4E8;">      })</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">      zg.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;publishQualityUpdate&#39;</span><span style="color:#E1E4E8;">, (</span><span style="color:#FFAB70;">streamID</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">stats</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        console.</span><span style="color:#B392F0;">warn</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;publishQualityUpdate&#39;</span><span style="color:#E1E4E8;">,result);</span></span>\n<span class="line"><span style="color:#6A737D;">        // 推流质量回调</span></span>\n<span class="line"><span style="color:#6A737D;">        // ...</span></span>\n<span class="line"><span style="color:#E1E4E8;">      })</span></span>\n<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (e) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      console.</span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(e);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"><span style="color:#E1E4E8;">  })();</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">body</span><span style="color:#E1E4E8;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">html</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ul><li><a href="https://doc-zh.zego.im/zh/7638.html" target="_blank" rel="noreferrer">直播实现流程</a></li><li><a href="https://zegodev.github.io/zego-express-webrtc-sample/" target="_blank" rel="noreferrer">webrtc demo</a></li></ul>',13)]))}]]);export{p as __pageData,o as default};
