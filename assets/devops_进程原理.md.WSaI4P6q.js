import{_ as s,c as n,b as a,o as l}from"./chunks/framework.CUf7xJpa.js";const o=JSON.parse('{"title":"进程管理","description":"","frontmatter":{},"headers":[{"level":2,"title":"linux进程","slug":"linux进程","link":"#linux进程","children":[]},{"level":2,"title":"PM2","slug":"pm2","link":"#pm2","children":[{"level":3,"title":"常用命令","slug":"常用命令","link":"#常用命令","children":[]},{"level":3,"title":"config","slug":"config","link":"#config","children":[]}]}],"relativePath":"devops/进程原理.md","filePath":"devops/进程原理.md"}');const p=s({name:"devops/进程原理.md"},[["render",function(s,o,p,t,e,F){return l(),n("div",null,o[0]||(o[0]=[a('<h1 id="进程管理" tabindex="-1">进程管理 <a class="header-anchor" href="#进程管理" aria-label="Permalink to &quot;进程管理&quot;">​</a></h1><h2 id="linux进程" tabindex="-1">linux进程 <a class="header-anchor" href="#linux进程" aria-label="Permalink to &quot;linux进程&quot;">​</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;"># 查看进程</span></span>\n<span class="line"><span style="color:#B392F0;">ps</span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> grep</span><span style="color:#9ECBFF;"> node</span></span>\n<span class="line"><span style="color:#79B8FF;">kill</span><span style="color:#79B8FF;"> -9</span><span style="color:#9ECBFF;"> pid</span></span></code></pre></div><h2 id="pm2" tabindex="-1">PM2 <a class="header-anchor" href="#pm2" aria-label="Permalink to &quot;PM2&quot;">​</a></h2><ul><li>安装 <code>node i -g pm2</code></li></ul><h3 id="常用命令" tabindex="-1">常用命令 <a class="header-anchor" href="#常用命令" aria-label="Permalink to &quot;常用命令&quot;">​</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#B392F0;">pm2</span><span style="color:#9ECBFF;"> start</span><span style="color:#9ECBFF;"> pm2-config.json</span></span>\n<span class="line"><span style="color:#B392F0;">pm2</span><span style="color:#9ECBFF;"> restart</span><span style="color:#9ECBFF;"> all</span></span>\n<span class="line"><span style="color:#B392F0;">pm2</span><span style="color:#9ECBFF;"> stop</span><span style="color:#9ECBFF;"> all</span></span>\n<span class="line"><span style="color:#B392F0;">pm2</span><span style="color:#9ECBFF;"> delete</span><span style="color:#79B8FF;"> 1</span><span style="color:#79B8FF;"> 2</span></span>\n<span class="line"><span style="color:#B392F0;">pm2</span><span style="color:#9ECBFF;"> log</span><span style="color:#79B8FF;"> 1</span><span style="color:#79B8FF;"> 2</span></span></code></pre></div><h3 id="config" tabindex="-1">config <a class="header-anchor" href="#config" aria-label="Permalink to &quot;config&quot;">​</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>\n<span class="line"><span style="color:#B392F0;">    &quot;apps&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#9ECBFF;"> {</span></span>\n<span class="line"><span style="color:#B392F0;">        &quot;name&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#9ECBFF;"> &quot;wuwu&quot;,</span><span style="color:#9ECBFF;">                             //</span><span style="color:#9ECBFF;"> 项目名</span><span style="color:#E1E4E8;">          </span></span>\n<span class="line"><span style="color:#B392F0;">        &quot;script&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#9ECBFF;"> &quot;./bin/www&quot;,</span><span style="color:#9ECBFF;">                      //</span><span style="color:#9ECBFF;"> 执行文件</span></span>\n<span class="line"><span style="color:#B392F0;">        &quot;cwd&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#9ECBFF;"> &quot;./&quot;,</span><span style="color:#9ECBFF;">                                //</span><span style="color:#9ECBFF;"> 根目录</span></span>\n<span class="line"><span style="color:#B392F0;">        &quot;args&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#9ECBFF;"> &quot;&quot;,</span><span style="color:#9ECBFF;">                                 //</span><span style="color:#9ECBFF;"> 传递给脚本的参数</span></span>\n<span class="line"><span style="color:#B392F0;">        &quot;interpreter&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#9ECBFF;"> &quot;&quot;,</span><span style="color:#9ECBFF;">                          //</span><span style="color:#9ECBFF;"> 指定的脚本解释器</span></span>\n<span class="line"><span style="color:#B392F0;">        &quot;interpreter_args&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#9ECBFF;"> &quot;&quot;,</span><span style="color:#9ECBFF;">                     //</span><span style="color:#9ECBFF;"> 传递给解释器的参数</span></span>\n<span class="line"><span style="color:#B392F0;">        &quot;watch&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#79B8FF;"> true</span><span style="color:#9ECBFF;">,</span><span style="color:#9ECBFF;">                              //</span><span style="color:#9ECBFF;"> 是否监听文件变动然后重启</span></span>\n<span class="line"><span style="color:#B392F0;">        &quot;ignore_watch&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#E1E4E8;"> [                           </span><span style="color:#9ECBFF;">//</span><span style="color:#9ECBFF;"> 不用监听的文件</span></span>\n<span class="line"><span style="color:#B392F0;">            &quot;node_modules&quot;</span><span style="color:#B392F0;">,</span></span>\n<span class="line"><span style="color:#B392F0;">            &quot;logs&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">        ],</span></span>\n<span class="line"><span style="color:#B392F0;">        &quot;exec_mode&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#9ECBFF;"> &quot;cluster_mode&quot;,</span><span style="color:#9ECBFF;">                //</span><span style="color:#9ECBFF;"> 应用启动模式，支持fork和cluster模式</span></span>\n<span class="line"><span style="color:#B392F0;">        &quot;instances&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#9ECBFF;"> 4,</span><span style="color:#9ECBFF;">                             //</span><span style="color:#9ECBFF;"> 应用启动实例个数，仅在cluster模式有效</span><span style="color:#9ECBFF;"> 默认为fork；或者</span><span style="color:#9ECBFF;"> max</span></span>\n<span class="line"><span style="color:#B392F0;">        &quot;max_memory_restart&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#9ECBFF;"> 8,</span><span style="color:#9ECBFF;">                    //</span><span style="color:#9ECBFF;"> 最大内存限制数，超出自动重启</span></span>\n<span class="line"><span style="color:#B392F0;">        &quot;error_file&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#9ECBFF;"> &quot;./logs/app-err.log&quot;,</span><span style="color:#9ECBFF;">         //</span><span style="color:#9ECBFF;"> 错误日志文件</span></span>\n<span class="line"><span style="color:#B392F0;">        &quot;out_file&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#9ECBFF;"> &quot;./logs/app-out.log&quot;,</span><span style="color:#9ECBFF;">           //</span><span style="color:#9ECBFF;"> 正常日志文件</span></span>\n<span class="line"><span style="color:#B392F0;">        &quot;merge_logs&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#79B8FF;"> true</span><span style="color:#9ECBFF;">,</span><span style="color:#9ECBFF;">                         //</span><span style="color:#9ECBFF;"> 设置追加日志而不是新建日志</span></span>\n<span class="line"><span style="color:#B392F0;">        &quot;log_date_format&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#9ECBFF;"> &quot;YYYY-MM-DD HH:mm:ss&quot;,</span><span style="color:#9ECBFF;">   //</span><span style="color:#9ECBFF;"> 指定日志文件的时间格式</span></span>\n<span class="line"><span style="color:#B392F0;">        &quot;min_uptime&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#9ECBFF;"> &quot;60s&quot;,</span><span style="color:#9ECBFF;">                        //</span><span style="color:#9ECBFF;"> 应用运行少于时间被认为是异常启动</span></span>\n<span class="line"><span style="color:#B392F0;">        &quot;max_restarts&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#9ECBFF;"> 30,</span><span style="color:#9ECBFF;">                         //</span><span style="color:#9ECBFF;"> 最大异常重启次数，即小于min_uptime运行时间重启次数；</span></span>\n<span class="line"><span style="color:#B392F0;">        &quot;autorestart&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#79B8FF;"> true</span><span style="color:#9ECBFF;">,</span><span style="color:#9ECBFF;">                        //</span><span style="color:#9ECBFF;"> 默认为true,</span><span style="color:#9ECBFF;"> 发生异常的情况下自动重启</span></span>\n<span class="line"><span style="color:#B392F0;">        &quot;cron_restart&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#9ECBFF;"> &quot;&quot;,</span><span style="color:#9ECBFF;">                         //</span><span style="color:#9ECBFF;"> crontab时间格式重启应用，目前只支持cluster模式</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#B392F0;">        &quot;restart_delay&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#9ECBFF;"> &quot;60s&quot;</span><span style="color:#9ECBFF;">                      //</span><span style="color:#9ECBFF;"> 异常重启情况下，延时重启时间</span></span>\n<span class="line"><span style="color:#B392F0;">        &quot;env&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#9ECBFF;"> {</span></span>\n<span class="line"><span style="color:#B392F0;">           &quot;NODE_ENV&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#9ECBFF;"> &quot;production&quot;,</span><span style="color:#9ECBFF;">                //</span><span style="color:#9ECBFF;"> 环境参数，当前指定为生产环境</span><span style="color:#9ECBFF;"> process.env.NODE_ENV</span></span>\n<span class="line"><span style="color:#B392F0;">           &quot;REMOTE_ADDR&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#9ECBFF;"> &quot;爱上大声地&quot;</span><span style="color:#9ECBFF;">               //</span><span style="color:#9ECBFF;"> process.env.REMOTE_ADDR</span></span>\n<span class="line"><span style="color:#E1E4E8;">        },</span></span>\n<span class="line"><span style="color:#B392F0;">        &quot;env_dev&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#9ECBFF;"> {</span></span>\n<span class="line"><span style="color:#B392F0;">            &quot;NODE_ENV&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#9ECBFF;"> &quot;development&quot;,</span><span style="color:#9ECBFF;">              //</span><span style="color:#9ECBFF;"> 环境参数，当前指定为开发环境</span><span style="color:#9ECBFF;"> pm2</span><span style="color:#9ECBFF;"> start</span><span style="color:#9ECBFF;"> app.js</span><span style="color:#79B8FF;"> --env_dev</span></span>\n<span class="line"><span style="color:#B392F0;">            &quot;REMOTE_ADDR&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#9ECBFF;"> &quot;&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">        },</span></span>\n<span class="line"><span style="color:#B392F0;">        &quot;env_test&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#9ECBFF;"> {</span><span style="color:#9ECBFF;">                               //</span><span style="color:#9ECBFF;"> 环境参数，当前指定为测试环境</span><span style="color:#9ECBFF;"> pm2</span><span style="color:#9ECBFF;"> start</span><span style="color:#9ECBFF;"> app.js</span><span style="color:#79B8FF;"> --env_test</span></span>\n<span class="line"><span style="color:#B392F0;">            &quot;NODE_ENV&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#9ECBFF;"> &quot;test&quot;,</span></span>\n<span class="line"><span style="color:#B392F0;">            &quot;REMOTE_ADDR&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#9ECBFF;"> &quot;&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">        }</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre></div>',9)]))}]]);export{o as __pageData,p as default};
