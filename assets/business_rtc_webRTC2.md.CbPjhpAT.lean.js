import{_ as a,c as s,b as e,o as l}from"./chunks/framework.CUf7xJpa.js";const n=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"协议","slug":"协议","link":"#协议","children":[]},{"level":2,"title":"流媒体采集","slug":"流媒体采集","link":"#流媒体采集","children":[]},{"level":2,"title":"rtmp","slug":"rtmp","link":"#rtmp","children":[]},{"level":2,"title":"srcObject","slug":"srcobject","link":"#srcobject","children":[]},{"level":2,"title":"StreamMedia","slug":"streammedia","link":"#streammedia","children":[]},{"level":2,"title":"websocket做了 也做了WebRTC信令","slug":"websocket做了-也做了webrtc信令","link":"#websocket做了-也做了webrtc信令","children":[]},{"level":2,"title":"mediaPlayer","slug":"mediaplayer","link":"#mediaplayer","children":[]},{"level":2,"title":"video","slug":"video","link":"#video","children":[]},{"level":2,"title":"audio","slug":"audio","link":"#audio","children":[]},{"level":2,"title":"数据格式 mp4 flv","slug":"数据格式-mp4-flv","link":"#数据格式-mp4-flv","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"relativePath":"business/rtc/webRTC2.md","filePath":"business/rtc/webRTC2.md"}');const o=a({name:"business/rtc/webRTC2.md"},[["render",function(a,n,o,t,r,p){return l(),s("div",null,n[0]||(n[0]=[e('<p>[TOC]</p><h2 id="协议" tabindex="-1">协议 <a class="header-anchor" href="#协议" aria-label="Permalink to &quot;协议&quot;">​</a></h2><ul><li>建立连接</li><li>会话生命周期</li></ul><h2 id="流媒体采集" tabindex="-1">流媒体采集 <a class="header-anchor" href="#流媒体采集" aria-label="Permalink to &quot;流媒体采集&quot;">​</a></h2><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/MediaDevices/getUserMedia" target="_blank" rel="noreferrer">navigator.mediaDevices.getUserMedia</a></li><li>采集摄像头数据并播放</li></ul><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">video</span><span style="color:#B392F0;"> style</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;width:800px;height: 800px;&quot;</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">video</span><span style="color:#E1E4E8;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>\n<span class="line"><span style="color:#6A737D;">  // 想要获取一个最接近 1280x720 的相机分辨率</span></span>\n<span class="line"><span style="color:#F97583;">  let</span><span style="color:#E1E4E8;"> constraints </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> { audio: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, video: { width: </span><span style="color:#79B8FF;">1280</span><span style="color:#E1E4E8;">, height: </span><span style="color:#79B8FF;">720</span><span style="color:#E1E4E8;"> } };</span></span>\n<span class="line"><span style="color:#E1E4E8;">  navigator.mediaDevices.</span><span style="color:#B392F0;">getUserMedia</span><span style="color:#E1E4E8;">(constraints)</span></span>\n<span class="line"><span style="color:#E1E4E8;">    .</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">mediaStream</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#F97583;">      let</span><span style="color:#E1E4E8;"> video </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">querySelector</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;video&#39;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">      video.srcObject </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> mediaStream;</span></span>\n<span class="line"><span style="color:#E1E4E8;">      video.</span><span style="color:#B392F0;">onloadedmetadata</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        video.</span><span style="color:#B392F0;">play</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">      };</span></span>\n<span class="line"><span style="color:#E1E4E8;">    })</span></span>\n<span class="line"><span style="color:#E1E4E8;">    .</span><span style="color:#B392F0;">catch</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">err</span><span style="color:#E1E4E8;">) { console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(err.name </span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;"> &quot;: &quot;</span><span style="color:#F97583;"> +</span><span style="color:#E1E4E8;"> err.message); }); </span><span style="color:#6A737D;">// 总是在最后检查错误</span></span>\n<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="rtmp" tabindex="-1">rtmp <a class="header-anchor" href="#rtmp" aria-label="Permalink to &quot;rtmp&quot;">​</a></h2><p>Flv</p><h2 id="srcobject" tabindex="-1">srcObject <a class="header-anchor" href="#srcobject" aria-label="Permalink to &quot;srcObject&quot;">​</a></h2><h2 id="streammedia" tabindex="-1">StreamMedia <a class="header-anchor" href="#streammedia" aria-label="Permalink to &quot;StreamMedia&quot;">​</a></h2><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// 麦克风</span></span>\n<span class="line"><span style="color:#B392F0;">getAudioTracks</span><span style="color:#E1E4E8;">(): MediaStreamTrack[];</span></span>\n<span class="line"><span style="color:#6A737D;">// 摄像头</span></span>\n<span class="line"><span style="color:#B392F0;">getVideoTracks</span><span style="color:#E1E4E8;">(): MediaStreamTrack[];</span></span>\n<span class="line"><span style="color:#E1E4E8;">localStream.</span><span style="color:#B392F0;">getTracks</span><span style="color:#E1E4E8;">();</span></span></code></pre></div><ul><li>获取媒体设备 navigator.mediaDevices.enumerateDevices()</li><li>RTCPeerConnection</li><li>peerConnection.addTrack(track, this.localStream);</li></ul><h2 id="websocket做了-也做了webrtc信令" tabindex="-1">websocket做了 也做了WebRTC信令 <a class="header-anchor" href="#websocket做了-也做了webrtc信令" aria-label="Permalink to &quot;websocket做了 也做了WebRTC信令&quot;">​</a></h2><ul><li><p>房间信令 <img src="/assets/img_30.CZr_hfMy.png" alt="img_3.png"></p></li><li><p>webRTC信令 <img src="/assets/img_32.DIw6K7CH.png" alt="img.png"><img src="/assets/img_31.DfBHmtZK.png" alt="img_1.png"></p></li></ul><h2 id="mediaplayer" tabindex="-1">mediaPlayer <a class="header-anchor" href="#mediaplayer" aria-label="Permalink to &quot;mediaPlayer&quot;">​</a></h2><h2 id="video" tabindex="-1">video <a class="header-anchor" href="#video" aria-label="Permalink to &quot;video&quot;">​</a></h2><h2 id="audio" tabindex="-1">audio <a class="header-anchor" href="#audio" aria-label="Permalink to &quot;audio&quot;">​</a></h2><h2 id="数据格式-mp4-flv" tabindex="-1">数据格式 mp4 flv <a class="header-anchor" href="#数据格式-mp4-flv" aria-label="Permalink to &quot;数据格式 mp4 flv&quot;">​</a></h2><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/WebRTC_API" target="_blank" rel="noreferrer">MDN WebRTC</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/MediaDevices/getUserMedia" target="_blank" rel="noreferrer">MDN getUserMedia</a></li><li><a href="https://w3c.github.io/mediacapture-main/#dom-mediadevices-getusermedia" target="_blank" rel="noreferrer">w3c getusermedia</a></li></ul>',20)]))}]]);export{n as __pageData,o as default};
