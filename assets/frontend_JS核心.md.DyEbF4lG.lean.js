import{_ as s,c as n,b as a,o as l}from"./chunks/framework.CUf7xJpa.js";const p=JSON.parse('{"title":"原型链","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/JS核心.md","filePath":"frontend/JS核心.md"}');const o=s({name:"frontend/JS核心.md"},[["render",function(s,p,o,e,t,r){return l(),n("div",null,p[0]||(p[0]=[a('<h1 id="原型链" tabindex="-1">原型链 <a class="header-anchor" href="#原型链" aria-label="Permalink to &quot;原型链&quot;">​</a></h1><p><img src="/assets/prototype.DBxwHCtQ.png" alt="img.png"></p><ul><li><p>事件循环过程</p><p>1.先执行同步代码</p><p>2.执行完所有的微任务</p><p>3.执行一个宏任务</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#B392F0;">setTimeout</span><span style="color:#E1E4E8;">(()</span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;">{</span></span>\n<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;macrotask&#39;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">},</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#B392F0;">queueMicrotask</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#6A737D;">  /* 微任务中将运行的代码 */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;microTask1&#39;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">});</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#B392F0;">queueMicrotask</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#6A737D;">  /* 微任务中将运行的代码 */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;microTask2&#39;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">});</span></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;synchronize&#39;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#6A737D;">//输出结果</span></span>\n<span class="line"><span style="color:#6A737D;">// synchronize</span></span>\n<span class="line"><span style="color:#6A737D;">// microTask1</span></span>\n<span class="line"><span style="color:#6A737D;">// microTask2</span></span>\n<span class="line"><span style="color:#6A737D;">// macrotask</span></span></code></pre></div></li><li><p>事件循环六个阶段</p></li></ul><p><img src="/assets/eventloop.DzAh5gm4.png" alt="img.png"></p><ul><li><p>参考</p><p><a href="https://nodejs.org/zh-cn/docs/guides/event-loop-timers-and-nexttick/#what-is-the-event-loop" target="_blank" rel="noreferrer">node事件循环</a></p><p><a href="http://lynnelv.github.io/js-event-loop-nodejs" target="_blank" rel="noreferrer">深入理解js事件循环机制（Node.js篇）</a></p><p><a href="https://www.jianshu.com/p/deedcbf68880" target="_blank" rel="noreferrer">nodejs中的event loop</a></p></li></ul>',5)]))}]]);export{p as __pageData,o as default};
