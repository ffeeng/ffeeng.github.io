import{_ as s,c as l,b as a,o as n}from"./chunks/framework.CUf7xJpa.js";const p=JSON.parse('{"title":"部署","description":"","frontmatter":{},"headers":[{"level":2,"title":"端口占用问题处理方式","slug":"端口占用问题处理方式","link":"#端口占用问题处理方式","children":[]}],"relativePath":"devops/deploy.md","filePath":"devops/deploy.md"}');const o=s({name:"devops/deploy.md"},[["render",function(s,p,o,e,t,c){return n(),l("div",null,p[0]||(p[0]=[a('<h1 id="部署" tabindex="-1">部署 <a class="header-anchor" href="#部署" aria-label="Permalink to &quot;部署&quot;">​</a></h1><h2 id="端口占用问题处理方式" tabindex="-1">端口占用问题处理方式 <a class="header-anchor" href="#端口占用问题处理方式" aria-label="Permalink to &quot;端口占用问题处理方式&quot;">​</a></h2><ul><li>端口问题</li></ul><ol><li><p>开启端口</p></li><li><p>验证端口</p></li></ol><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#B392F0;">telnet</span><span style="color:#79B8FF;"> 127.0.0.1</span><span style="color:#79B8FF;"> 3000</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#B392F0;">nc</span><span style="color:#79B8FF;"> -l</span><span style="color:#79B8FF;"> 3000</span><span style="color:#6A737D;"> # 开启端口3000服务</span></span>\n<span class="line"><span style="color:#B392F0;">nc</span><span style="color:#79B8FF;"> 127.0.0.1</span><span style="color:#79B8FF;"> 3000</span><span style="color:#6A737D;"> #客户端连上改服务</span></span>\n<span class="line"><span style="color:#6A737D;"># 客户端输入的数据都会原样显示在服务器上</span></span></code></pre></div><ol start="3"><li>查看端口</li></ol><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">#mac 查看端口被那个进程占用 port:8000</span></span>\n<span class="line"><span style="color:#B392F0;">lsof</span><span style="color:#79B8FF;"> -i:8000</span><span style="color:#E1E4E8;">  </span></span>\n<span class="line"><span style="color:#6A737D;"># pid:871</span></span>\n<span class="line"><span style="color:#79B8FF;">kill</span><span style="color:#79B8FF;"> 871</span><span style="color:#E1E4E8;"> </span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">#windows 查看端口被那个进程占用 port:8000</span></span>\n<span class="line"><span style="color:#B392F0;">netstat</span><span style="color:#79B8FF;"> -aon</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">findstr</span><span style="color:#9ECBFF;"> &quot;8000&quot;</span></span>\n<span class="line"><span style="color:#6A737D;"># pid:871</span></span>\n<span class="line"><span style="color:#B392F0;">taskkill</span><span style="color:#9ECBFF;"> /T</span><span style="color:#9ECBFF;"> /F</span><span style="color:#9ECBFF;"> /PID</span><span style="color:#79B8FF;"> 871</span></span></code></pre></div><ul><li>网络问题</li></ul><ol><li>网络链路</li><li>外网进入内网</li><li>内网出外网</li></ol><ul><li>证书问题</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">https 证书</span></span></code></pre></div><ul><li>nginx代理问题</li></ul>',12)]))}]]);export{p as __pageData,o as default};
