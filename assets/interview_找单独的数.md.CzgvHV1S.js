import{_ as s,c as a,b as n,o as l}from"./chunks/framework.CUf7xJpa.js";const p=JSON.parse('{"title":"找单独的数","description":"","frontmatter":{},"headers":[{"level":2,"title":"问题描述","slug":"问题描述","link":"#问题描述","children":[]},{"level":2,"title":"输入格式","slug":"输入格式","link":"#输入格式","children":[]},{"level":2,"title":"输出格式","slug":"输出格式","link":"#输出格式","children":[]},{"level":2,"title":"输入样例(1)","slug":"输入样例-1","link":"#输入样例-1","children":[]},{"level":2,"title":"输出样例(1)","slug":"输出样例-1","link":"#输出样例-1","children":[]},{"level":2,"title":"输入样例(2)","slug":"输入样例-2","link":"#输入样例-2","children":[]},{"level":2,"title":"输出样例(2)","slug":"输出样例-2","link":"#输出样例-2","children":[]},{"level":2,"title":"代码实现","slug":"代码实现","link":"#代码实现","children":[]}],"relativePath":"interview/找单独的数.md","filePath":"interview/找单独的数.md"}');const o=s({name:"interview/找单独的数.md"},[["render",function(s,p,o,e,t,c){return l(),a("div",null,p[0]||(p[0]=[n('<h1 id="找单独的数" tabindex="-1">找单独的数 <a class="header-anchor" href="#找单独的数" aria-label="Permalink to &quot;找单独的数&quot;">​</a></h1><h2 id="问题描述" tabindex="-1">问题描述 <a class="header-anchor" href="#问题描述" aria-label="Permalink to &quot;问题描述&quot;">​</a></h2><p>有一堆数字，除了一个数字，其它的数字都是成对出现。班上的每个同学拿一个数字，正好将这些数字全部拿完，问如何快速找到拿了单独数字的同学？</p><h2 id="输入格式" tabindex="-1">输入格式 <a class="header-anchor" href="#输入格式" aria-label="Permalink to &quot;输入格式&quot;">​</a></h2><ul><li>空格分隔输入所有的数字</li></ul><h2 id="输出格式" tabindex="-1">输出格式 <a class="header-anchor" href="#输出格式" aria-label="Permalink to &quot;输出格式&quot;">​</a></h2><ul><li>单独的那个数字</li></ul><h2 id="输入样例-1" tabindex="-1">输入样例(1) <a class="header-anchor" href="#输入样例-1" aria-label="Permalink to &quot;输入样例(1)&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span>1 1 2 2 3 3 4 5 5</span></span></code></pre></div><h2 id="输出样例-1" tabindex="-1">输出样例(1) <a class="header-anchor" href="#输出样例-1" aria-label="Permalink to &quot;输出样例(1)&quot;">​</a></h2><p>4</p><h2 id="输入样例-2" tabindex="-1">输入样例(2) <a class="header-anchor" href="#输入样例-2" aria-label="Permalink to &quot;输入样例(2)&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span>0 1 0 1 2</span></span></code></pre></div><h2 id="输出样例-2" tabindex="-1">输出样例(2) <a class="header-anchor" href="#输出样例-2" aria-label="Permalink to &quot;输出样例(2)&quot;">​</a></h2><p>2</p><h2 id="代码实现" tabindex="-1">代码实现 <a class="header-anchor" href="#代码实现" aria-label="Permalink to &quot;代码实现&quot;">​</a></h2><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"></span>\n<span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> solution</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">inp</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#6A737D;">  // Edit your code here</span></span>\n<span class="line"><span style="color:#F97583;">  const</span><span style="color:#79B8FF;"> map</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> new</span><span style="color:#B392F0;"> Map</span><span style="color:#E1E4E8;">()</span></span>\n<span class="line"><span style="color:#F97583;">  let</span><span style="color:#E1E4E8;"> res</span></span>\n<span class="line"><span style="color:#F97583;">  for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> num </span><span style="color:#F97583;">of</span><span style="color:#E1E4E8;"> inp){</span></span>\n<span class="line"><span style="color:#F97583;">    if</span><span style="color:#E1E4E8;">(map.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(num)){</span></span>\n<span class="line"><span style="color:#E1E4E8;">      map.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(num,map.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(num)</span><span style="color:#F97583;">+</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;">{</span></span>\n<span class="line"><span style="color:#E1E4E8;">      map.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(num,</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"><span style="color:#E1E4E8;">  map.</span><span style="color:#B392F0;">forEach</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">value</span><span style="color:#E1E4E8;">,</span><span style="color:#FFAB70;">key</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;">{</span></span>\n<span class="line"><span style="color:#F97583;">    if</span><span style="color:#E1E4E8;">(value</span><span style="color:#F97583;">===</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">){</span></span>\n<span class="line"><span style="color:#E1E4E8;">      res </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> key</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"><span style="color:#E1E4E8;">  })</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F97583;">  return</span><span style="color:#E1E4E8;"> res;</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> main</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#6A737D;">  // Add your test cases here</span></span>\n<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">solution</span><span style="color:#E1E4E8;">([</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">]) </span><span style="color:#F97583;">===</span><span style="color:#79B8FF;"> 4</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">solution</span><span style="color:#E1E4E8;">([</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">]) </span><span style="color:#F97583;">===</span><span style="color:#79B8FF;"> 2</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">();</span></span></code></pre></div>',17)]))}]]);export{p as __pageData,o as default};
